Wish the GPU compiles pipeline "line" {
    {mat3 surfaceToClip vec2 from vec2 to float thickness vec4 color} {
        vec2 vertices[4] = vec2[4](
             min(from, to) - thickness,
             vec2(max(from.x, to.x) + thickness, min(from.y, to.y) - thickness),
             vec2(min(from.x, to.x) - thickness, max(from.y, to.y) + thickness),
             max(from, to) + thickness
        );
        return vec4(surfaceToClip * vec3(vertices[gl_VertexIndex], 1.0), 1.0);
    } {
        float l = length(to - from);
        vec2 d = (to - from) / l;
        vec2 q = (gl_FragCoord.xy - (from + to)*0.5);
        q = mat2(d.x, -d.y, d.y, d.x) * q;
        q = abs(q) - vec2(l, thickness)*0.5;
        float dist = length(max(q, 0.0)) + min(max(q.x, q.y), 0.0);

        return dist < 0.0 ? color : vec4(0, 0, 0, 0);
    }
}

When the color map is /colorMap/ &\
     /p/ has drawable surface /surf/ &\
     /p/ has drawable surface projection /proj/ &\
     /someone/ wishes to draw a line onto /p/ with /...options/ {

    set points [dict get $options points]
    set width [dict get $options width]
    set color [dict get $options color]
    set color [dict getdef $colorMap $color $color]

    set instances [list]
    foreach {set i 0} {$i < [llength $points] - 1} {incr i} {
        set from [lindex $points $i]
        set to [lindex $points [+ $i 1]]
        lappend instances [list $proj $from $to $width $color]
    }
    Wish the GPU draws pipeline "line" onto surface $surf \
        with instances $instances
}
