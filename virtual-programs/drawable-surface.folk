Wish $this has filename "drawable-surface.folk"

critcl::ccode {
	typedef struct {
		unsigned width;
		unsigned height;
		pixel_t pixels[];
	} drawable_surface_t;
}
opaquePointerType drawable_surface_t*
livecproc newDrawableSurface {unsigned width unsigned height} drawable_surface_t* {
	drawable_surface_t* ret = Tcl_Alloc(sizeof(drawable_surface_t) + width*height*sizeof(pixel_t));
        ret.width = width; ret.height = height;
        return ret;
}

if {![info exists ::surfaces]} {set ::surfaces [dict create]}
When /thing/ has region /region/ {
	Wish $thing is labelled $region
        if {[dict exists $::surfaces $thing]} {
           dict set ::surfaces $thing [newDrawableSurface $width $height]
        }
        set surface [dict get $::surfaces $thing]
        Claim $thing has drawable surface $surface
}
