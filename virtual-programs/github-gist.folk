namespace eval ::githubGist {
    variable nextId 0

    set tokenLocation "$::env(HOME)/folk-secrets/github-gist-token.txt"
    set fd [open $tokenLocation r]
    variable token [string trim [read $fd]]
    close $fd
    
    # gist should be a dictionary with key=filename and value=contents
    proc postGist {gist description} {
        variable token

        # tack description onto the end
        set gist [list {*}$gist $description]
        # join with \0 so we don't have to deal with escaping stuff
        # (note, this won't work with binary files due to interior nulls)
        set unixList [join $gist "\0"]

        # put unix list into temp file
        set tempFile [file tempfile]
        set fd [open $tempFile w]
        puts -nonewline $fd $unixList
        close $fd

        # jq explanation:
        # 1. split by nul
        # 2. convert ["key1", "value1", "key2", "value2", "description"] to
        #    {key1: "value1", key2: "value2"}
        # 3. convert {key1: "value1"} -> {key1: {content: "value1"}} and put in $files
        # 4. grab description from end of the list
        # 5. construct the gist
        exec cat $tempFile | jq -Rscr {
            split("\u0000") |
            . as $top | [range(0; length - 1; 2) | {key: $top.[.], value: $top.[. + 1]}] | from_entries |
            map_values({"content": .}) as $files |
            $top.[-1] as $description |
            {"description": $description, "public": true, "files": $files}
        } | \
        curl -sS -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $token" \
            -H "Content-Type: application/json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -d @- \
            $url

        file delete $tempFile
    }
}
